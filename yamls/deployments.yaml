apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airflow
      meta.helm.sh/release-namespace: airflow
    creationTimestamp: "2023-11-01T09:42:11Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      chart: airflow-1.11.0
      component: scheduler
      executor: CeleryExecutor
      heritage: Helm
      release: airflow
      tier: airflow
    name: airflow-scheduler
    namespace: airflow
    resourceVersion: "1183"
    uid: 17478f5a-957a-4cbf-bcfb-281fe629b3bc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: scheduler
        release: airflow
        tier: airflow
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/airflow-config: 0a3f108a792e43f3b91082c190c23eb8175fe250b1464b970f00751b0f9980e3
          checksum/extra-configmaps: e862ea47e13e634cf17d476323784fa27dac20015550c230953b526182f5cac8
          checksum/extra-secrets: e9582fdd622296c976cbc10a5ba7d6702c28a24fe80795ea5b84ba443a56c827
          checksum/metadata-secret: 1527346545415bf13f4c9ad69470086eb90d854f2b83594d78ec1badb5e13eb0
          checksum/pgbouncer-config-secret: 1dae2adc757473469686d37449d076b0c82404f61413b58ae68b3c5e99527688
          checksum/result-backend-secret: 98a68f230007cfa8f5d3792e1aff843a76b0686409e4a46ab2f092f6865a1b71
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          component: scheduler
          release: airflow
          tier: airflow
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    component: scheduler
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - bash
          - -c
          - exec airflow scheduler
          env:
          - name: AIRFLOW__CORE__FERNET_KEY
            valueFrom:
              secretKeyRef:
                key: fernet-key
                name: airflow-fernet-key
          - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-metadata
          - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-metadata
          - name: AIRFLOW_CONN_AIRFLOW_DB
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-metadata
          - name: AIRFLOW__WEBSERVER__SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: webserver-secret-key
                name: airflow-webserver-secret-key
          - name: AIRFLOW__CELERY__BROKER_URL
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-broker-url
          image: sweetaimp/docker-python:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - |
                CONNECTION_CHECK_MAX_COUNT=0 AIRFLOW__LOGGING__LOGGING_LEVEL=ERROR exec /entrypoint \
                airflow jobs check --job-type SchedulerJob --local
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 20
          name: scheduler
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          startupProbe:
            exec:
              command:
              - sh
              - -c
              - |
                CONNECTION_CHECK_MAX_COUNT=0 AIRFLOW__LOGGING__LOGGING_LEVEL=ERROR exec /entrypoint \
                airflow jobs check --job-type SchedulerJob --local
            failureThreshold: 6
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 20
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/airflow/pod_templates/pod_template_file.yaml
            name: config
            readOnly: true
            subPath: pod_template_file.yaml
          - mountPath: /opt/airflow/logs
            name: logs
          - mountPath: /opt/airflow/airflow.cfg
            name: config
            readOnly: true
            subPath: airflow.cfg
          - mountPath: /opt/airflow/config/airflow_local_settings.py
            name: config
            readOnly: true
            subPath: airflow_local_settings.py
        - args:
          - bash
          - /clean-logs
          env:
          - name: AIRFLOW__LOG_RETENTION_DAYS
            value: "15"
          image: sweetaimp/docker-python:latest
          imagePullPolicy: IfNotPresent
          name: scheduler-log-groomer
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/airflow/logs
            name: logs
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - airflow
          - db
          - check-migrations
          - --migration-wait-timeout=60
          env:
          - name: AIRFLOW__CORE__FERNET_KEY
            valueFrom:
              secretKeyRef:
                key: fernet-key
                name: airflow-fernet-key
          - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-metadata
          - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-metadata
          - name: AIRFLOW_CONN_AIRFLOW_DB
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-metadata
          - name: AIRFLOW__WEBSERVER__SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: webserver-secret-key
                name: airflow-webserver-secret-key
          - name: AIRFLOW__CELERY__BROKER_URL
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-broker-url
          image: sweetaimp/docker-python:latest
          imagePullPolicy: IfNotPresent
          name: wait-for-airflow-migrations
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/airflow/airflow.cfg
            name: config
            readOnly: true
            subPath: airflow.cfg
          - mountPath: /opt/airflow/config/airflow_local_settings.py
            name: config
            readOnly: true
            subPath: airflow_local_settings.py
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 0
          runAsUser: 50000
        serviceAccount: airflow-scheduler
        serviceAccountName: airflow-scheduler
        terminationGracePeriodSeconds: 10
        volumes:
        - configMap:
            defaultMode: 420
            name: airflow-config
          name: config
        - emptyDir: {}
          name: logs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-11-01T09:43:54Z"
      lastUpdateTime: "2023-11-01T09:43:54Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-11-01T09:42:11Z"
      lastUpdateTime: "2023-11-01T09:43:54Z"
      message: ReplicaSet "airflow-scheduler-69cc7f767b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airflow
      meta.helm.sh/release-namespace: airflow
    creationTimestamp: "2023-11-01T09:42:11Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      chart: airflow-1.11.0
      component: statsd
      heritage: Helm
      release: airflow
      tier: airflow
    name: airflow-statsd
    namespace: airflow
    resourceVersion: "962"
    uid: 3c814104-432f-4fd3-812e-9d1597fe8178
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: statsd
        release: airflow
        tier: airflow
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: statsd
          release: airflow
          tier: airflow
      spec:
        affinity: {}
        containers:
        - args:
          - --statsd.mapping-config=/etc/statsd-exporter/mappings.yml
          image: quay.io/prometheus/statsd-exporter:v0.22.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: 9102
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: statsd
          ports:
          - containerPort: 9125
            name: statsd-ingest
            protocol: UDP
          - containerPort: 9102
            name: statsd-scrape
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: 9102
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/statsd-exporter/mappings.yml
            name: config
            subPath: mappings.yml
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsUser: 65534
        serviceAccount: airflow-statsd
        serviceAccountName: airflow-statsd
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: airflow-statsd
          name: config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-11-01T09:42:31Z"
      lastUpdateTime: "2023-11-01T09:42:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-11-01T09:42:11Z"
      lastUpdateTime: "2023-11-01T09:42:31Z"
      message: ReplicaSet "airflow-statsd-7d985bcb6f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: airflow
      meta.helm.sh/release-namespace: airflow
    creationTimestamp: "2023-11-01T09:42:11Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      chart: airflow-1.11.0
      component: webserver
      heritage: Helm
      release: airflow
      tier: airflow
    name: airflow-webserver
    namespace: airflow
    resourceVersion: "1224"
    uid: 2f0a8ebf-b8fa-4dcf-bca7-4031c1e26e1a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: webserver
        release: airflow
        tier: airflow
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/airflow-config: 0a3f108a792e43f3b91082c190c23eb8175fe250b1464b970f00751b0f9980e3
          checksum/extra-configmaps: e862ea47e13e634cf17d476323784fa27dac20015550c230953b526182f5cac8
          checksum/extra-secrets: e9582fdd622296c976cbc10a5ba7d6702c28a24fe80795ea5b84ba443a56c827
          checksum/metadata-secret: 1527346545415bf13f4c9ad69470086eb90d854f2b83594d78ec1badb5e13eb0
          checksum/pgbouncer-config-secret: 1dae2adc757473469686d37449d076b0c82404f61413b58ae68b3c5e99527688
          checksum/webserver-config: 2f3fdfd294a37094d2abee43b2b09888a5c195ee03414996bf99a4681658af94
          checksum/webserver-secret-key: e90c03ad05d59ae04d9f2149f22e26e91e5e9a12ebbd2c6d4d3d85237be58a70
        creationTimestamp: null
        labels:
          component: webserver
          release: airflow
          tier: airflow
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    component: webserver
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - bash
          - -c
          - exec airflow webserver
          env:
          - name: AIRFLOW__CORE__FERNET_KEY
            valueFrom:
              secretKeyRef:
                key: fernet-key
                name: airflow-fernet-key
          - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-metadata
          - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-metadata
          - name: AIRFLOW_CONN_AIRFLOW_DB
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-metadata
          - name: AIRFLOW__WEBSERVER__SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: webserver-secret-key
                name: airflow-webserver-secret-key
          - name: AIRFLOW__CELERY__BROKER_URL
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-broker-url
          image: sweetaimp/docker-python:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: webserver
          ports:
          - containerPort: 8080
            name: airflow-ui
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          startupProbe:
            failureThreshold: 6
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 20
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/airflow/pod_templates/pod_template_file.yaml
            name: config
            readOnly: true
            subPath: pod_template_file.yaml
          - mountPath: /opt/airflow/airflow.cfg
            name: config
            readOnly: true
            subPath: airflow.cfg
          - mountPath: /opt/airflow/config/airflow_local_settings.py
            name: config
            readOnly: true
            subPath: airflow_local_settings.py
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - airflow
          - db
          - check-migrations
          - --migration-wait-timeout=60
          env:
          - name: AIRFLOW__CORE__FERNET_KEY
            valueFrom:
              secretKeyRef:
                key: fernet-key
                name: airflow-fernet-key
          - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-metadata
          - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-metadata
          - name: AIRFLOW_CONN_AIRFLOW_DB
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-metadata
          - name: AIRFLOW__WEBSERVER__SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: webserver-secret-key
                name: airflow-webserver-secret-key
          - name: AIRFLOW__CELERY__BROKER_URL
            valueFrom:
              secretKeyRef:
                key: connection
                name: airflow-broker-url
          image: sweetaimp/docker-python:latest
          imagePullPolicy: IfNotPresent
          name: wait-for-airflow-migrations
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/airflow/airflow.cfg
            name: config
            readOnly: true
            subPath: airflow.cfg
          - mountPath: /opt/airflow/config/airflow_local_settings.py
            name: config
            readOnly: true
            subPath: airflow_local_settings.py
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 0
          runAsUser: 50000
        serviceAccount: airflow-webserver
        serviceAccountName: airflow-webserver
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: airflow-config
          name: config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-11-01T09:44:11Z"
      lastUpdateTime: "2023-11-01T09:44:11Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-11-01T09:42:11Z"
      lastUpdateTime: "2023-11-01T09:44:11Z"
      message: ReplicaSet "airflow-webserver-d89c9785" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
